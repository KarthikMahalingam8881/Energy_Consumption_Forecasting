# -*- coding: utf-8 -*-
"""fastapi_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IEn790A1iit54c5Jj8o-OwogO5A1vR-e
"""

from fastapi import FastAPI
from pydantic import BaseModel
import numpy as np

app = FastAPI(
    title="Energy Forecasting API",
    description="Predicts building energy consumption per sqft based on weather and building metadata.",
    version="1.0.0"
)

# Define expected input schema
class EnergyRequest(BaseModel):
    airtemperature: float
    dewtemperature: float
    windspeed: float
    cloudcoverage: float
    yearbuilt: int
    precipdepth1hr: float
    sealvlpressure: float
    building_id: str

# Dummy placeholder for model (can be replaced with real XGBoost model)
# Example: load from disk using joblib or xgb.Booster
# model = joblib.load("models/xgb_model_panther.pkl")

@app.get("/")
def read_root():
    return {"message": "Energy Forecasting API is up and running."}

@app.post("/predict-energy")
def predict_energy(data: EnergyRequest):
    # Simulated prediction logic â€” replace with real model.predict()
    fake_prediction = np.random.uniform(0.1, 1.5)

    return {
        "building_id": data.building_id,
        "predicted_energy_per_sqft": round(fake_prediction, 4),
        "unit": "kWh/sqft"
    }